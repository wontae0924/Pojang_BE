
name: Deploy to EC2 With Docker
on:
  # push:
  #   branches:
  #   - main
  pull_request:
    branches:
    - dev
    
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t bny1324/pojang-be:v1 .

    - name: DockerHub Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to DockerHub
      run: docker push bny1324/pojang-be:v1
      
    # docker-compose.yml ec2 전송
    - name: Copy docker-compose to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./docker-compose.yml"
        target: "/home/${{ secrets.EC2_USERNAME }}"

    - name: EC2 SSH Login & Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          if ! type docker > /dev/null ; then
            curl -s https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
          fi
          sudo docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          sudo docker-compose down --rmi all || true
          sudo docker pull bny1324/pojang-be:v1
          sudo DB_HOST=${{ secrets.DB_HOST }} DB_USERNAME=${{ secrets.DB_USERNAME }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} docker-compose up -d